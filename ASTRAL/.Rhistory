summary(fit.log)
uce1000.pis.plot2<-ggplot(df.uce1000,aes(x=pars.site,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("UCE 1000 Flank", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# informative sites") + ylab("RF Distance")+ylim(0,155)+
geom_point(data=df.uce1000[df.uce1000$chrom=="Z-chromosome",], mapping =aes(x=pars.site, y=rf.distance.coll), color="yellow", size=1)
uce1000.pis.plot2
fit.glm <- glm(rf.distance.coll~gc.cont, data = df.uce1000)
fit.glog <- glm(rf.distance.coll~log(gc.cont), data = df.uce1000)
summary(fit.glm) #AIC: 19358 Lowest AIC
summary(fit.glog) #AIC: 19391
fit.lm <- lm(rf.distance.coll~gc.cont, data = df.uce1000)
uce1000.gc.plot2<-ggplot(df.uce1000,aes(x=gc.cont,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~x, color="red")+
ggtitle("UCE 1000 Flank", subtitle = paste("Adj. R-squared = ",round(summary(fit.lm)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.lm))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("GC Content") + ylab("RF Distance")+ylim(0,155)+
geom_point(data=df.uce1000[df.uce1000$chrom=="Z-chromosome",], mapping =aes(x=gc.cont, y=rf.distance.coll), color="yellow", size=1)
uce1000.gc.plot2
df.CDS<-read.csv("../CDS.collapsed.csv")
for (i in 1:length(df.CDS$pars.site.prop)){
if (df.CDS$pars.site.prop[i]==0){
df.CDS$pars.site.prop[i]<-NA
}
}
df.CDS<-na.omit(df.CDS)
df.CDS$pars.site.prop<-as.numeric(df.CDS$pars.site.prop)
df.CDS$pars.site<-as.numeric(df.CDS$pars.site)
df.CDS$rf.distance.coll<-as.numeric(df.CDS$rf.distance.coll)
fit.glm <- glm(rf.distance.coll~pars.site.prop, data = df.CDS)
fit.glog <- glm(rf.distance.coll~log(pars.site.prop), data = df.CDS)
summary(fit.glm) #AIC: 20228
summary(fit.glog) #AIC: 20208 Lowest AIC
fit.lm <- lm(rf.distance.coll~pars.site.prop, data = df.CDS)
fit.log <- lm(rf.distance.coll~log(pars.site.prop), data = df.CDS)
summary(fit.lm)
summary(fit.log)
CDS.prop.plot2<-ggplot(df.CDS,aes(x=pars.site.prop,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("Proportion of informative sites") + ylab("RF Distance")+ylim(0,155)
CDS.prop.plot2
fit.glm <- glm(rf.distance.coll~pars.site, data = df.CDS)
fit.glog <- glm(rf.distance.coll~log(pars.site), data = df.CDS)
summary(fit.glm) #AIC: 19291
summary(fit.glog) #AIC: 18669 Lowest AIC
fit.lm <- lm(rf.distance.coll~pars.site, data = df.CDS)
fit.log <- lm(rf.distance.coll~log(pars.site), data = df.CDS)
summary(fit.lm)
summary(fit.log)
CDS.pis.plot2<-ggplot(df.CDS,aes(x=pars.site,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# of informative sites") + ylab("RF Distance")+ylim(0,155)
CDS.pis.plot2
fit.glm <- glm(rf.distance.coll~gc.cont, data = df.CDS)
fit.glog <- glm(rf.distance.coll~log(gc.cont), data = df.CDS)
summary(fit.glm) #AIC: 20197 Lowest AIC
summary(fit.glog) #AIC: 20210
fit.lm <- lm(rf.distance.coll~gc.cont, data = df.CDS)
fit.log <- lm(rf.distance.coll~log(gc.cont), data = df.CDS)
CDS.gc.plot2<-ggplot(df.CDS,aes(x=gc.cont,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~x, color="red")+
ggtitle("CDS", subtitle = paste("Adj. R-squared = ",round(summary(fit.lm)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.lm))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("GC Content") + ylab("RF Distance")+ylim(0,155)
CDS.gc.plot2
####Combine UCEs###
dataset<-c(rep("uce 100", length(df.uce100[,1])),rep("uce 300", length(df.uce300[,1])),rep("uce 1000", length(df.uce1000[,1])))
df.uce<-rbind(df.uce100,df.uce300,df.uce1000)
df.uce<-cbind(dataset,df.uce)
write.csv(df.uce,"../uces.combined.csv")
####for each duplicate value in column "aln" take random alignment (i.e., for each locus use only 100, 300, or 1000 rather than keeping all three)
library(plyr)
subsampled_data <- ddply(df.uce,.(aln),
function(x) {
x[sample(nrow(x),size=1),]
})
df.uce<-subsampled_data
df.uce[df.uce$aln=="uce-1177.nexus",] #confirm only represented once
fit.glm <- glm(rf.distance.coll~pars.site.prop, data = df.uce)
fit.glog <- glm(rf.distance.coll~log(pars.site.prop), data = df.uce)
summary(fit.glm) #AIC: 23630
summary(fit.glog) #AIC: 23311 Lowest AIC
fit.lm <-lm(rf.distance.coll~pars.site.prop, data = df.uce)
fit.log <-lm(rf.distance.coll~log(pars.site.prop), data = df.uce)
summary(fit.lm)
summary(fit.log)
uce.prop.plot2<-ggplot(df.uce,aes(x=pars.site.prop,y=rf.distance.coll, col=dataset)) +
geom_point(alpha=0.6) +
scale_color_manual(values = c("#ca7dcc",
"#1b98e0",
"#353436"))+
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("UCE 3 Datasets", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("Proportion of informative sites") + ylab("RF Distance")+ylim(0,155)+
theme(legend.position = "none")+
geom_point(data=df.uce[df.uce$chrom=="Z-chromosome",], mapping =aes(x=pars.site.prop, y=rf.distance.coll), color="Yellow", size=1)
uce.prop.plot2
fit.glm <- glm(rf.distance.coll~pars.site, data = df.uce)
fit.glog <- glm(rf.distance.coll~log(pars.site), data = df.uce)
summary(fit.glm) #AIC: 24592
summary(fit.glog) #AIC: 20767 Lowest AIC
fit.lm <- lm(rf.distance.coll~pars.site, data = df.uce)
fit.log <- lm(rf.distance.coll~log(pars.site), data = df.uce)
summary(fit.lm)
summary(fit.log)
uce.pis.plot2<-ggplot(df.uce,aes(x=pars.site,y=rf.distance.coll, col=dataset)) +
geom_point(alpha=0.6) +
geom_smooth(method="lm", se = T ,formula = y~log(x), color="red")+
scale_color_manual(values = c("#ca7dcc",
"#1b98e0",
"#353436"))+
ggtitle("UCE 3 Datasets", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# informative sites") + ylab("RF Distance")+ylim(0,155)+
theme(legend.position = c(0.75,0.75),legend.background = element_rect(fill="white",
size=0.5, linetype="solid",
colour ="black"))+
geom_point(data=df.uce[df.uce$chrom=="Z-chromosome",], mapping =aes(x=pars.site, y=rf.distance.coll), color="yellow", size=1)
uce.pis.plot2
pdf(file = "../../figs_30Oct24/cors.pdf", width = 14, height = 7)
ggarrange(CDS.pis.plot2,uce100.pis.plot2,uce300.pis.plot2,uce1000.pis.plot2,uce.pis.plot2,
CDS.prop.plot2,uce100.prop.plot2,uce300.prop.plot2,uce1000.prop.plot2,uce.prop.plot2,
ncol = 5, nrow = 2)
dev.off()
#boxplots
chrom<-rep(NA,length(df.CDS[,1]))
df.CDS<-cbind(df.CDS,chrom)
dataset<-c(rep("uce 100", length(df.uce100[,1])),rep("uce 300", length(df.uce300[,1])),rep("uce 1000", length(df.uce1000[,1])),rep("BUSCO", length(df.CDS[,1])))
df.all<-rbind(df.uce100,df.uce300,df.uce1000,df.CDS)
df.all<-cbind(dataset,df.all)
df.all$dataset<-factor(df.all$dataset, levels = c("BUSCO", "uce 100", "uce 300", "uce 1000"))
a<-ggplot(df.all, aes(x=dataset, y=rf.distance.coll)) +
geom_violin()+ geom_boxplot(width=0.1)+ggtitle("RF Distance by dataset")+
theme_bw() + xlab("") + ylab("RF Distance")
b<-ggplot(df.all, aes(x=dataset, y=log(pars.site))) +
geom_violin()+ geom_boxplot(width=0.1)+ggtitle("PIS by dataset")+
theme_bw() + xlab("") + ylab("Number of PIS")
c<-ggplot(df.all, aes(x=dataset, y=pars.site.prop)) +
geom_violin()+ geom_boxplot(width=0.1)+ggtitle("Percent PIS by dataset")+
theme_bw() + xlab("") + ylab("Proportion PIS")
d<-ggplot(df.all, aes(x=dataset, y=log(gc.cont))) +
geom_violin()+ geom_boxplot(width=0.1)+ggtitle("GC content variation by dataset")+
theme_bw() + xlab("") + ylab("Variance in GC content")
names(df.uce)
#does RF of Z-chromosome UCEs differ from RF of Autosomal UCEs?
df.uce$dataset<-factor(df.uce$dataset, levels = c("uce 100", "uce 300", "uce 1000"))
e<-ggplot(df.all[df.all$dataset!="BUSCO",], aes(x=dataset, y=rf.distance.coll)) +
geom_violin(aes(color = chrom), trim = FALSE, position = position_dodge(0.9) ) +
geom_boxplot(aes(color = chrom), width = 0.1, position = position_dodge(0.9)) +
scale_color_manual(values = c("#353436","#1b98e0"))+
theme_bw() + xlab("") + ylab("RF Distance")+ggtitle("RF Distance by chromosome")
e
mean(df.uce1000$rf.distance.coll[df.uce1000$chrom=="Autosome"]) #38.58408
sd(df.uce1000$rf.distance.coll[df.uce1000$chrom=="Autosome"]) #9.673809
mean(df.uce1000$rf.distance.coll[df.uce1000$chrom=="Z-chromosome"]) #32.22642
sd(df.uce1000$rf.distance.coll[df.uce1000$chrom=="Z-chromosome"]) #8.889582
kruskal.test(rf.distance.coll~chrom,data=df.uce1000)
kruskal.test(rf.distance.coll~chrom,data=df.uce300)
kruskal.test(rf.distance.coll~chrom,data=df.uce100)
###Concordance factors boxplots
setwd("~/Documents/ANSDU/Tinamous/concordance_factors/")
cfs<-na.omit(read.csv("CFS.all.datasets.csv"))
unique(cfs$Dataset)
cfs$Dataset<-factor(cfs$Dataset, levels = c("BUSCOs","UCE100", "UCE300", "UCE1000-Autosomes", "UCE1000-ChrZ"))
kruskal.test(cfs$gCF[cfs$Method=="astral"]~cfs$Dataset[cfs$Method=="astral"])
kruskal.test(cfs$gCF[cfs$Dataset=="UCE1000-Autosomes"]~cfs$Method[cfs$Dataset=="UCE1000-Autosomes"])
mean(cfs$gCF[cfs$Dataset=="UCE1000-Autosomes" & cfs$Method=="iqtree"])
mean(na.omit(cfs$gCF[cfs$Dataset=="UCE1000-Autosomes" & cfs$Method=="astral"]))
dunnTest(cfs$gCF[cfs$Method=="astral"]~cfs$Dataset[cfs$Method=="astral"])
f<-ggplot(cfs[cfs$Method=="astral",], aes(x=Dataset, y=gCF)) +
geom_violin() +
geom_boxplot(width = 0.1, position = position_dodge(0.9)) +
theme_bw() + xlab("") + ylab("gCF")+ggtitle("Condcordance factors")
#Look at CDS results for UCE-like subsamples
a<-mean(df.uce1000$pars.site.prop)+(2*sd(df.uce1000$pars.site.prop))
b<-mean(df.uce1000$pars.site.prop)-(2*sd(df.uce1000$pars.site.prop))
c<-mean(df.uce300$pars.site.prop)+(2*sd(df.uce300$pars.site.prop))
d<-mean(df.uce300$pars.site.prop)-(2*sd(df.uce300$pars.site.prop))
e<-mean(df.uce100$pars.site.prop)+(2*sd(df.uce100$pars.site.prop))
f<-mean(df.uce100$pars.site.prop)-(2*sd(df.uce100$pars.site.prop))
g<-mean(df.CDS$gc.cont)+(2*sd(df.CDS$gc.cont))
h<-mean(df.CDS$gc.cont)-(2*sd(df.CDS$gc.cont))
#filter out extremes of GC
df.CDS.filt.gc<-df.CDS[df.CDS$gc.cont<=g & df.CDS$gc.cont>=h,]
fit.glm <- glm(rf.distance.coll~pars.site.prop, data = df.CDS.filt.gc)
fit.glog <- glm(rf.distance.coll~log(pars.site.prop), data = df.CDS.filt.gc)
summary(fit.glm) #AIC: 19712
summary(fit.glog) #AIC: 19688 Lowest AIC
fit.lm <- lm(rf.distance.coll~log(pars.site.prop), data = df.CDS.filt.gc)
CDS.prop.plot3<-ggplot(df.CDS.filt.gc,aes(x=pars.site.prop,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs filtered by GC content", subtitle = paste("Adj. R-squared = ",round(summary(fit.lm)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.lm))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("Proportion of informative sites") + ylab("RF Distance")
CDS.prop.plot3
fit.glm <- glm(rf.distance.coll~pars.site, data = df.CDS.filt.gc)
fit.glog <- glm(rf.distance.coll~log(pars.site), data = df.CDS.filt.gc)
summary(fit.glm) #AIC: 18778
summary(fit.glog) #AIC: 18140 Lowest AIC
fit.log <- lm(rf.distance.coll~log(pars.site), data = df.CDS.filt.gc)
CDS.pis.plot4<-ggplot(df.CDS.filt.gc,aes(x=pars.site,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs filtered by GC content", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# of informative sites") + ylab("RF Distance")
CDS.pis.plot4
#CDS with comparable prop variable sites to all UCEs datasets
df.CDS.filt1<-df.CDS[df.CDS$pars.site.prop>=f & df.CDS$pars.site.prop<=a,]
fit.glm <- glm(rf.distance.coll~pars.site.prop, data = df.CDS.filt1)
fit.glog <- glm(rf.distance.coll~log(pars.site.prop), data = df.CDS.filt1)
summary(fit.glm) #AIC: 18274
summary(fit.glog) #AIC: 18247 Lowest AIC
fit.lm <- lm(rf.distance~log(pars.site.prop), data = df.CDS.filt1)
CDS.prop.plot6<-ggplot(df.CDS.filt1,aes(x=pars.site.prop,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs: UCE-like filtered by PIS", subtitle = paste("Adj. R-squared = ",round(summary(fit.lm)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.lm))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("Proportion of informative sites") + ylab("RF Distance")
CDS.prop.plot6
fit.glm <- glm(rf.distance.coll~pars.site, data = df.CDS.filt1)
fit.glog <- glm(rf.distance.coll~log(pars.site), data = df.CDS.filt1)
summary(fit.glm) #AIC: 17342
summary(fit.glog) #AIC: 16702 Lowest AIC
fit.log <- lm(rf.distance.coll~log(pars.site), data = df.CDS.filt1)
CDS.pis.plot7<-ggplot(df.CDS.filt1,aes(x=pars.site,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs: UCE-like filtered by PIS", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# of informative sites") + ylab("RF Distance")
CDS.pis.plot7
#filter by UCE and gc content
df.CDS.filt2<-df.CDS.filt1[df.CDS.filt1$gc.cont<=g & df.CDS.filt1$gc.cont>=h,]
fit.glm <- glm(rf.distance.coll~pars.site.prop, data = df.CDS.filt2)
fit.glog <- glm(rf.distance.coll~log(pars.site.prop), data = df.CDS.filt2)
summary(fit.glm) #AIC: 18007
summary(fit.glog) #AIC: 17980 Lowest AIC
fit.lm <- lm(rf.distance.coll~log(pars.site.prop), data = df.CDS.filt2)
CDS.prop.plot8<-ggplot(df.CDS.filt2,aes(x=pars.site.prop,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs: UCE-like filtered by GC & PIS", subtitle = paste("Adj. R-squared = ",round(summary(fit.lm)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.lm))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("Proportion of informative sites") + ylab("RF Distance")
CDS.prop.plot8
fit.glm <- glm(rf.distance.coll~pars.site, data = df.CDS.filt2)
fit.glog <- glm(rf.distance.coll~log(pars.site), data = df.CDS.filt2)
summary(fit.glm) #AIC: 17096
summary(fit.glog) #AIC: 16459 Lowest AIC
fit.log <- lm(rf.distance.coll~log(pars.site), data = df.CDS.filt2)
CDS.pis.plot9<-ggplot(df.CDS.filt2,aes(x=pars.site,y=rf.distance.coll)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm, se = T ,formula = y~log(x), color="red")+
ggtitle("BUSCOs: UCE-like filtered by GC & PIS", subtitle = paste("Adj. R-squared = ",round(summary(fit.log)$adj.r.squared,digits = 2), ", P = ",round(coef(summary(fit.log))[2,4],digits = 4),sep = ""))+
theme_bw() + xlab("# of informative sites") + ylab("RF Distance")
CDS.pis.plot9
par(mfrow=c(1,1))
####################
#####RF Heatmap#####
####################
setwd("~/Documents/ANSDU/Tinamous/Trees/")
####################
#####RF Heatmap#####
####################
setwd("~/Documents/ANSDU/Tinamous/Trees/")
spec<-c("cuyap42937","cuver35355","cusim651488")
uce.100.iqt<-drop.tip(read.tree("crypt.uce100.full.100p.iqtree.treefile"),spec)
uce.100.ast<-drop.tip(read.tree("crypt.uce100.full.100p.astral.tre"),spec)
uce.100.iqt.75<-drop.tip(read.tree("crypt.uce100.full.75p.iqtree.treefile"),spec)
uce.100.ast.75<-drop.tip(read.tree("crypt.uce100.full.75p.astral.tre"),spec)
plot(uce.100.iqt.75)
uce.300.iqt<-drop.tip(read.tree("crypt.uce300.full.100p.iqtree.treefile"),spec)
uce.300.ast<-drop.tip(read.tree("crypt.uce300.full.100p.astral.tre"),spec)
uce.300.iqt.75<-drop.tip(read.tree("crypt.uce300.full.75p.iqtree.treefile"),spec)
uce.300.ast.75<-drop.tip(read.tree("crypt.uce300.full.75p.astral.tre"),spec)
plot(uce.300.iqt)
uce.1000.iqt<-drop.tip(read.tree("crypt.uce1000.full.100p.iqtree.treefile"),spec)
uce.1000.ast<-drop.tip(read.tree("crypt.uce1000.full.100p.astral.tre"),spec)
uce.1000.iqt.75<-drop.tip(read.tree("crypt.uce1000.full.75p.iqtree.treefile"),spec)
uce.1000.ast.75<-drop.tip(read.tree("crypt.uce1000.full.75p.astral.tre"),spec)
plot(uce.1000.iqt.75)
uce.1000.ChrZ.iqt<-drop.tip(read.tree("crypt.uce1000.chrz.75p.iqtree.treefile"),spec)
uce.1000.ChrZ.ast<-drop.tip(read.tree("crypt.uce1000.ChrZ.75p.astral.tre"),spec)
plot(uce.1000.ChrZ.iqt)
uce.1000.autosomes.iqt<-drop.tip(read.tree("crypt.uce1000.autosomes.75p.iqtree.treefile"),spec)
uce.1000.autosomes.ast<-drop.tip(read.tree("crypt.uce1000.autosomes.75p.astral.tre"),spec)
plot(uce.1000.autosomes.iqt)
cds.iqt<-drop.tip(read.tree("crypt.cds.100p.iqtree.treefile"),spec)
cds.ast<-drop.tip(read.tree("crypt.cds.100p.astral.tre"),spec)
cds.iqt.75<-drop.tip(read.tree("crypt.cds.75p.iqtree.treefile"),spec)
cds.ast.75<-drop.tip(read.tree("crypt.cds.75p.astral.tre"),spec)
plot(cds.ast.75)
cds.ast.75$tip.label
RF.dist(cds.ast.75,uce.1000.iqt.75)
#75% only
trees<-c(uce.100.iqt.75,uce.100.ast.75,uce.300.iqt.75,uce.300.ast.75,uce.1000.iqt.75,uce.1000.ast.75,uce.1000.autosomes.iqt,uce.1000.autosomes.ast,uce.1000.ChrZ.iqt,uce.1000.ChrZ.ast,cds.iqt.75,cds.ast.75)
trees.list<-c("uce.100.iqt.75","uce.100.ast.75","uce.300.iqt.75","uce.300.ast.75","uce.1000.iqt.75","uce.1000.ast.75","uce.1000.autosomes.iqt","uce.1000.autosomes.ast","uce.1000.ChrZ.iqt","uce.1000.ChrZ.ast","cds.iqt.75","cds.ast.75")
trees1<-c()
trees2<-c()
RF<-c()
count=0
j=3
for (i in 1:length(trees)){
for (j in 1:length(trees)){
count=count+1
trees1[count]<-trees.list[i]
trees2[count]<-trees.list[j]
print(trees1[count])
print(trees2[count])
RF[count]<-RF.dist(tree1=trees[i][[1]],tree2=trees[j][[1]])
}
}
tab<-data.frame(cbind(trees1,trees2,as.numeric(RF)))
tab$trees1<-factor(trees1, levels = c("cds.iqt.75","uce.100.iqt.75","uce.300.iqt.75","uce.1000.iqt.75","uce.1000.autosomes.iqt","uce.1000.ChrZ.iqt","cds.ast.75","uce.100.ast.75","uce.300.ast.75","uce.1000.ast.75","uce.1000.autosomes.ast","uce.1000.ChrZ.ast"))
tab$trees2<-factor(trees2, levels = c("cds.iqt.75","uce.100.iqt.75","uce.300.iqt.75","uce.1000.iqt.75","uce.1000.autosomes.iqt","uce.1000.ChrZ.iqt","cds.ast.75","uce.100.ast.75","uce.300.ast.75","uce.1000.ast.75","uce.1000.autosomes.ast","uce.1000.ChrZ.ast"))
library(hrbrthemes)
ggplot(tab, aes(trees1, trees2, fill= as.numeric(RF))) +
geom_tile() +
scale_fill_gradient2(low = "steelblue3", high = "tomato3", mid = "ivory",
midpoint = max(RF)/2, limit = c(min(RF),max(RF)), space = "Lab",
name="RF Distance") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+xlab("") + ylab("")+
geom_text(aes(trees1, trees2, label = RF), color = "black", size = 3) +
ggtitle(label = "Species Tree Differences for Crypt. Clade A")
support.tab<-na.omit(read.csv("../RF.distances/Topologies_Support.csv"))
unique(support.tab$Metric)
a<-(support.tab$Value[support.tab$Metric=="Bootstrap/PP"]-min(support.tab$Value[support.tab$Metric=="Bootstrap/PP"]))/(max(support.tab$Value[support.tab$Metric=="Bootstrap/PP"])-min(support.tab$Value[support.tab$Metric=="Bootstrap/PP"]))*100
b<-(support.tab$Value[support.tab$Metric=="gCF"]-min(support.tab$Value[support.tab$Metric=="gCF"]))/(max(support.tab$Value[support.tab$Metric=="gCF"])-min(support.tab$Value[support.tab$Metric=="gCF"]))*100
c<-100-(support.tab$Value[support.tab$Metric=="100-rf.t1"]-min(support.tab$Value[support.tab$Metric=="100-rf.t1"]))/(max(support.tab$Value[support.tab$Metric=="100-rf.t1"])-min(support.tab$Value[support.tab$Metric=="100-rf.t1"]))*100
d<-100-(support.tab$Value[support.tab$Metric=="100-rf.t2"]-min(support.tab$Value[support.tab$Metric=="100-rf.t2"]))/(max(support.tab$Value[support.tab$Metric=="100-rf.t2"])-min(support.tab$Value[support.tab$Metric=="100-rf.t2"]))*100
e<-(support.tab$Value[support.tab$Metric=="gCF.cladeA"]-min(support.tab$Value[support.tab$Metric=="gCF.cladeA"]))/(max(support.tab$Value[support.tab$Metric=="gCF.cladeA"])-min(support.tab$Value[support.tab$Metric=="gCF.cladeA"]))*100
f<-(support.tab$Value[support.tab$Metric=="Bootstrap/PP.cladeA"]-min(support.tab$Value[support.tab$Metric=="Bootstrap/PP.cladeA"]))/(max(support.tab$Value[support.tab$Metric=="Bootstrap/PP.cladeA"])-min(support.tab$Value[support.tab$Metric=="Bootstrap/PP.cladeA"]))*100
Value2<-round(c(a,b,c,d,e,f),digits=0)
support.tab$Value2<-Value2
support.tab$Value[support.tab$Metric=="100-rf.t1"]<-100-support.tab$Value[support.tab$Metric=="100-rf.t1"]
support.tab$Value[support.tab$Metric=="100-rf.t2"]<-100-support.tab$Value[support.tab$Metric=="100-rf.t2"]
support.tab$Value[support.tab$Metric=="gCF"]<-round(support.tab$Value[support.tab$Metric=="gCF"],digits = 0)
support.tab$Value[support.tab$Metric=="gCF.cladeA"]<-round(support.tab$Value[support.tab$Metric=="gCF.cladeA"],digits = 0)
support.tab$Tree<-factor(support.tab$Tree, levels = c("uce.100.iqt","uce.100.iqt.75","uce.300.iqt","uce.300.iqt.75","uce.1000.iqt","uce.1000.iqt.75","uce.1000.autosomes.iqt","uce.1000.ChrZ.iqt","cds.iqt","cds.iqt.75","uce.100.ast","uce.100.ast.75","uce.300.ast","uce.300.ast.75","uce.1000.ast","uce.1000.ast.75","uce.1000.autosomes.ast","uce.1000.ChrZ.ast","cds.ast","cds.ast.75"))
support.tab$Metric<-factor(support.tab$Metric, levels = c("Bootstrap/PP","Bootstrap/PP.cladeA","gCF","gCF.cladeA","100-rf.t1","100-rf.t2"))
ggplot(support.tab, aes(Tree, Metric, fill= as.numeric(Value2))) +
geom_tile() +
scale_fill_gradient2(low = "steelblue3", high = "tomato3" ,
midpoint = max(support.tab$Value2)/2, limit = c(min(support.tab$Value2),max(support.tab$Value2)), space = "Lab",
name="normalized score") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+xlab("") + ylab("")+
geom_text(aes(Tree, Metric, label = Value), color = "black", size = 3) +
ggtitle(label = "Species Tree Support for Crypt. Clade A")
setwd("~/Documents/ANSDU/Tinamous/ASTRAL/")
outs<-c("cvar27099","crker147057","cryund","crybou","crdui419412","ceery21146","ccgol2213","crnoc59478","cuund34614","cuyap42937","cbar42396","cbcos53413","cscap613347","cssou586295","csnig6048","crysou_gca_013389845","csalbgur081","ccin21636","cpta650391","crber182233","eeele16893","eepat56833","eudele_gca_003342815","effor12668","tpen7597","tiing186371","nbor79764","ndaga68765","nmann614501","nmnig16884","nomin344282","tanan133116ab","nccin2861","rhmac145784","rrruf13855","nobra61359","noorn61422","noros645439","nocur425359","notper_gca_003342845","nppen6601","ntac27158","notorn_gca_013398335","npnie62872","notpen_gca_013398315","rhea_penn_gca_003342835","anodid_gca_006937325","nbbon33138","nncad473927","not_nig_gca_013398345","njul32810","notjul_gca_013398735","tgut85944","tingut_gca_000705375","tiosg311159","tsol25977","ttkle11280","tmmaj20810","tmser456416","tmper40426","cocas11195","coobs25896","cooch113498","copun86899","cparmnt800","cttat35476","cbre625102","crcas434024")
trees<-read.tree("autosomes-cladeA-100p.trees")
plot(drop.tip(trees[[1]],outs))
t.ht<-c()
for (i in 1:length(trees)){
trees[[i]]<-drop.tip(root(trees[[i]],"cvar27099",resolve.root = T),outs)
tree<-trees[[i]]
t.ht[i]<-max(nodeHeights(tree))
}
plot(trees[[7]])
trees2<-read.tree("chrz-cladeA-100p.trees")
t.ht.Z<-c()
for (i in 1:length(trees2)){
tree<-trees2[[i]]
tree<-drop.tip(root(tree,"cvar27099",resolve.root = T),outs)
t.ht.Z[i]<-max(nodeHeights(tree))
}
plot(trees[[1]])
hts<-as.numeric(append(t.ht,t.ht.Z))
chrom<-c(rep("autosome",length(trees)),rep("Z-chrom",length(trees2)))
df.hts<-data.frame(cbind(chrom,hts))
df.hts$hts<-as.numeric(df.hts$hts)
df.hts$chrom<-factor(df.hts$chrom,levels = c("autosome","Z-chrom"))
bp.hts<-ggplot(df.hts, aes(x=chrom, y=hts)) +
geom_boxplot(outliers = F)+ggtitle("Tree heights by chromosome type")+
theme_bw() + xlab("") + ylab("Tree height (subst. per site)")
bp.hts
mean(t.ht.Z)/mean(t.ht)
kruskal.test(hts~chrom,data=df.hts)
outs<-c("cvar27099","crybou","cryund_gca_013389825","crycin_gca_003342915","ccgol2213","crnoc59478","cusim651488","cuver35355","cuund34614","cuyap42937","cbar42396","cbcos53413","cscap613347","cssou586295","csnig6048","crysou_gca_013389845","csalbgur081","ccin21636","cpta650391","crber182233","eeele16893","eepat56833","eudele_gca_003342815","effor12668","tpen7597","tiing186371","nbor79764","ndaga68765","nmann614501","nmnig16884","nomin344282","tanan133116ab","nccin2861","rhmac145784","rrruf13855","nobra61359","noorn61422","noros645439","nocur425359","notper_gca_003342845","nppen6601","ntac27158","notorn_gca_013398335","npnie62872","notpen_gca_013398315","rhea_penn_gca_003342835","anodid_gca_006937325","nbbon33138","nncad473927","not_nig_gca_013398345","njul32810","notjul_gca_013398735","tgut85944","tingut_gca_000705375","tiosg311159","tsol25977","ttkle11280","tmmaj20810","tmser456416","tmper40426","cocas11195","coobs25896","cooch113498","copun86899","cparmnt800","cttat35476","cbre625102","crcas434024")
ins<-c("crker147057","crdui419412","ceery21146","cstr9577")
trees<-root(read.tree("autosomes-cladeA-100p.trees"),"cvar27099")
plot(trees[[1]])
aut.mon.T2<-c()
aut.mon.T3<-c()
aut.mon.T1<-c()
counts=0
for(j in 1:3){
for (i in 1:length(trees)){
counts=counts+1
rand<-sample(length(ins),1)
tax1<-ins[rand]
ins.new<-ins[-rand]
tree<-drop.tip(trees[[i]],c(outs,ins.new))
trees[[counts]]<-tree
aut.mon.T2[counts]<-is.monophyletic(tree,c("ctra66583",tax1)) #T2/T4
aut.mon.T3[counts]<-is.monophyletic(tree,c("ctra66583","cratr320360")) #T3
aut.mon.T1[counts]<-is.monophyletic(tree,c(tax1,"cratr320360")) #T1
}
}
sum(aut.mon.T2) #T2/T4
sum(aut.mon.T3) #T3
sum(aut.mon.T1) #T1
plot(trees[[1]])
hts.aut.mon.T2<-c()
for (i in 1:length(trees[aut.mon.T2])){
tree<-drop.tip(trees[aut.mon.T2][[i]],"cratr320360")
hts.aut.mon.T2[i]<-max(nodeHeights(tree))
}
mean(hts.aut.mon.T2)
hts.aut.mon.T3<-c()
for (i in 1:length(trees[aut.mon.T3])){
tree<-drop.tip(trees[aut.mon.T3][[i]],ins)
hts.aut.mon.T3[i]<-max(nodeHeights(tree))
}
mean(hts.aut.mon.T3)
hts.aut.mon.T1<-c()
for (i in 1:length(trees[aut.mon.T1])){
tree<-drop.tip(trees[aut.mon.T1][[i]],"ctra66583")
hts.aut.mon.T1[i]<-max(nodeHeights(tree))
}
mean(hts.aut.mon.T1)
tree<-c(rep("T2",length(hts.aut.mon.T2)),rep("T3",length(hts.aut.mon.T3)),rep("T1", length(hts.aut.mon.T1)))
hts<-c(hts.aut.mon.T2,hts.aut.mon.T3,hts.aut.mon.T1)
df.hts2<-data.frame(cbind(tree,hts))
df.hts2$tree<-factor(df.hts2$tree, levels=c("T2","T3","T1"))
df.hts2$hts<-as.numeric(df.hts2$hts)
kruskal.test(hts~tree, data=df.hts2)
dunnTest(hts~tree, data=df.hts2)
bp.hts<-ggplot(df.hts2, aes(x=tree, y=hts)) +
geom_boxplot(outliers = F)+ggtitle("Tree heights by chromosome type")+
theme_bw() + xlab("") + ylab("Tree height (subst. per site)")
bp.hts
trees2<-read.tree("chrz-cladeA-100p.trees")
Z.mon.T2<-c()
Z.mon.T3<-c()
Z.mon.T1<-c()
for (i in 1:length(trees2)){
rand<-sample(length(ins),1)
tax1<-ins[rand]
ins.new<-ins[-rand]
tree<-drop.tip(trees2[[i]],c(outs,ins.new))
trees2[[i]]<-tree
Z.mon.T2[i]<-is.monophyletic(tree,c("ctra66583",tax1))
Z.mon.T3[i]<-is.monophyletic(tree,c("ctra66583","cratr320360"))
Z.mon.T1[i]<-is.monophyletic(tree,c(tax1,"cratr320360"))
}
sum(aut.mon.T1)
sum(Z.mon.T1)
sum(aut.mon.T2)
sum(Z.mon.T2)
sum(aut.mon.T3)
sum(Z.mon.T3)
hts.Z.mon.T2<-c()
for (i in 1:length(trees2[Z.mon.T2])){
tree<-drop.tip(trees2[Z.mon.T2][[i]],"cratr320360")
hts.Z.mon.T2[i]<-max(nodeHeights(tree))
}
mean(hts.Z.mon.T2)
hts.Z.mon.T3<-c()
for (i in 1:length(trees2[Z.mon.T3])){
tree<-drop.tip(trees2[Z.mon.T3][[i]],"cstr9577")
hts.Z.mon.T3[i]<-max(nodeHeights(tree))
}
mean(hts.Z.mon.T3)
hts.Z.mon.T1<-c()
for (i in 1:length(trees2[Z.mon.T1])){
tree<-drop.tip(trees2[Z.mon.T1][[i]],"ctra66583")
hts.Z.mon.T1[i]<-max(nodeHeights(tree))
}
mean(hts.Z.mon.T1)
plot(tree)
tree<-c(rep("T2",length(hts.Z.mon.T2)),rep("T3",length(hts.Z.mon.T3)),rep("T1", length(hts.Z.mon.T1)))
hts<-c(hts.Z.mon.T2,hts.Z.mon.T3,hts.Z.mon.T1)
df.hts3<-data.frame(cbind(tree,hts))
df.hts3$tree<-factor(df.hts3$tree, levels=c("T2","T3","T1"))
df.hts3$hts<-as.numeric(df.hts3$hts)
dataset<-c(rep("Autosomes",length(df.hts2$hts)),rep("Z-chromosome", length(df.hts3$hts)))
df.hts4<-rbind(df.hts2,df.hts3)
df.hts4<-data.frame(cbind(dataset,df.hts4))
df.hts4$tree<-factor(df.hts4$tree, levels = c("T1","T2","T3"))
#pdf(file = "../figs_30Oct24/TreeHeights_by_topology.pdf", width = 7, height = 5)
bp.hts<-ggplot(df.hts4, aes(x=tree, y=hts)) +
#geom_violin(aes(color = dataset), trim = FALSE, position = position_dodge(0.9) ) +
geom_boxplot(aes(color = dataset), width = 0.75, position = position_dodge(0.9), outliers = F) +
geom_point(aes(color = dataset),position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.9),alpha=0.3)+
scale_color_manual(values = c("#353436","#1b98e0"))+
theme_bw() + xlab("") + ylab("Node Height (subst. per site)")+ggtitle("Tree Heights for alternative topologies")
bp.hts
kruskal.test(hts~tree, data=df.hts2)
#pdf(file = "../figs_30Oct24/TreeHeights_by_topology.pdf", width = 7, height = 5)
bp.hts<-ggplot(df.hts4, aes(x=tree, y=hts)) +
#geom_violin(aes(color = dataset), trim = FALSE, position = position_dodge(0.9) ) +
geom_boxplot(aes(color = dataset), width = 0.75, position = position_dodge(0.9), outliers = F) +
#geom_point(aes(color = dataset),position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.9),alpha=0.3)+
scale_color_manual(values = c("#353436","#1b98e0"))+
theme_bw() + xlab("") + ylab("Node Height (subst. per site)")+ggtitle("Tree Heights for alternative topologies")
bp.hts
kruskal.test(hts~tree, data=df.hts2)
dunnTest(hts~tree, data=df.hts2)
kruskal.test(hts~tree, data=df.hts3)
dunnTest(hts~tree, data=df.hts3)
kruskal.test(hts~dataset, data=df.hts4[df.hts4$tree=="T2",]) #P<0.0001
kruskal.test(hts~dataset, data=df.hts4[df.hts4$tree=="T3",]) #P<0.0001
kruskal.test(hts~dataset, data=df.hts4[df.hts4$tree=="T1",]) #P=0.004378
